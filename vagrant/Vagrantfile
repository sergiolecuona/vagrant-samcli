Vagrant.configure("2") do |configLS|

 configLS.vm.provision "file", source: File.expand_path("../id_rsa.pub", __FILE__), destination: "~/.ssh/authorized_keys"
 configLS.vm.provision "file", source: File.expand_path("~/.aws/credentials", __FILE__), destination: "~/.aws/credentials"
 configLS.ssh.insert_key = false
 configLS.ssh.private_key_path = [File.expand_path("../id_rsa", __FILE__), "~/.vagrant.d/insecure_private_key"]

 configLS.vm.box = "centos/7"

 configLS.vm.define "SAM-node"
 configLS.vm.hostname = "samnode"
 configLS.vm.network :private_network, ip:"192.168.77.30"
 configLS.vm.box_check_update = false
 configLS.vm.provider "virtualbox" do |v|
  v.memory = 4096
  v.cpus = 1
 end

 configLS.vm.provision "ansible" do |ansible|
 ansible.playbook = "ansible/main.yml"
 ansible.extra_vars = {
  vagrant: 'up',
  ansible_python_interpreter: '/usr/bin/python2.7'
 }
 #Use the auto-generated inventory
 #ansible.inventory_path = "hosts"
 ansible.verbose = "-vvv"
 ansible.become = true
 # This should avoid checking for an existing host in your known_hosts file
 ansible.host_key_checking = false
 # ansible groups

 end

    #yum install -y python python-pip python-devel awscli yum-utils setuptools gcc
    #pip install pip -U
    #pip install --ignore-installed aws-sam-cli
    #yum install -y device-mapper-persistent-data lvm2
    #yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    #yum-config-manager --enable docker-ce-edge
    #    systemctl enable docker
    #yum install -y docker-ce
#    systemctl start docker

 for port in 4567..4582 do
  configLS.vm.network "forwarded_port", guest: port, host: port
 end
end
